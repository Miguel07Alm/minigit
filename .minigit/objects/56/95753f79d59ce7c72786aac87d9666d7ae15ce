use crate::utils::process_entry;
use std::path::{Path, PathBuf};
use std::{fs, io};

pub fn add(file_path: &str) {
    if file_path.eq(".") {
        let entries: Vec<PathBuf> = match fs::read_dir(".") {
            Ok(entries) => entries
                .map(|res| res.map(|e| e.path()))
                .collect::<Result<Vec<_>, io::Error>>()
                .unwrap_or_else(|err| {
                    eprintln!("Error collecting entries: {}", err);
                    Vec::new()
                }),
            Err(err) => {
                eprintln!("Error reading directory: {}", err);
                Vec::new()
            }
        };

        for entry in entries {
            process_entry(&entry.as_path())
        }
    } else {
        process_entry(Path::new(file_path))
    }
}
